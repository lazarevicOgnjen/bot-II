name: bot II

on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install system dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3

      # Step 4: Verify installations
      - name: Verify Chromium and Chromedriver installation
        run: |
          echo "Checking Chromium installation..."
          google-chrome --version
          which google-chrome

          echo "Checking Chromedriver installation..."
          chromedriver --version
          which chromedriver

      # Step 5: Install Python dependencies
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 6: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python bp-main.py

      # Step 7: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update bp.md
        id: auto-commit-action-bp

      # Step 8: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-bp.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python bp-photo.py

      # Step 9: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-bp.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_BP }}
        run: python bp-discord.py

      # Step 10: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python lp-main.py

      # Step 11: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update lp.md
        id: auto-commit-action-lp

      # Step 12: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-lp.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python lp-photo.py

      # Step 13: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-lp.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_LP }}
        run: python lp-discord.py

      # Step 14: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oop-main.py

      # Step 15: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update oop.md
        id: auto-commit-action-oop

      # Step 16: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-oop.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oop-photo.py

      # Step 17: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-oop.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_OOP }}
        run: python oop-discord.py

      # Step 18: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python pj-main.py

      # Step 19: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update pj.md
        id: auto-commit-action-pj

      # Step 20: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-pj.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python pj-photo.py

      # Step 21: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-pj.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_PJ }}
        run: python pj-discord.py

      # Step 22: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python sp-main.py

      # Step 23: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update sp.md
        id: auto-commit-action-sp

      # Step 24: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-sp.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python sp-photo.py

      # Step 25: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-sp.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_SP }}
        run: python sp-discord.py

      # Step 26: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python aor1-main.py

      # Step 27: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update aor1.md
        id: auto-commit-action-aor1

      # Step 28: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-aor1.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python aor1-photo.py

      # Step 29: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-aor1.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_AOR1 }}
        run: python aor1-discord.py

      # Step 30: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python dmat-main.py

      # Step 31: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update dmat.md
        id: auto-commit-action-dmat

      # Step 32: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-dmat.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python dmat-photo.py

      # Step 33: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-dmat.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_DMAT }}
        run: python dmat-discord.py


      # Step 34: Run scraping script
      - name: Run main script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oopj-main.py

      # Step 35: Commit changes to novosti.md
      - name: Commit changes
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update oopj.md
        id: auto-commit-action-oopj

      # Step 36: Take screenshot if changes detected
      - name: Take photo
        if: steps.auto-commit-action-oopj.outputs.changes_detected == 'true'
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python oopj-photo.py

      # Step 37: Notify via Discord bot
      - name: Discord bot notification
        if: steps.auto-commit-action-oopj.outputs.changes_detected == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_OOPJ }}
        run: python oopj-discord.py
